
apply plugin: 'maven-publish'

def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("obigogithub.properties")))

def LIB_GROUP_ID = 'com.mobis.personalization'
def LIB_ARTIFACT_ID = 'personalizationlibtest'
def LIB_VERSION = '1.0.0'

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

  //      ./gradlew --warning-mode=all publishDeployPublicationToGithubPackagesRepository

    publishing {
        repositories {
            maven {
                name = 'GithubPackages'
                url = uri("https://maven.pkg.github.com/obigogit/obigo-mobis-personalization-service")
                credentials {
                    username = githubProperties['github_username'] ?: System.getenv("github_username")
                    password = githubProperties['github_access_token'] ?: System.getenv("github_access_token")
                }
            }
            maven {
                name = 'CustomMavenRepo'
                url = "file://${buildDir}/repo"
            }
        }

        publications {
            deploy(MavenPublication) {
               // buildType = variant.buildType.name // sets the current build type
                groupId LIB_GROUP_ID
                artifactId LIB_ARTIFACT_ID
                version LIB_VERSION
                artifact("$buildDir/outputs/aar/${project.name}-release.aar")
                //artifact(sourceJar)

                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                    configurations.api.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
